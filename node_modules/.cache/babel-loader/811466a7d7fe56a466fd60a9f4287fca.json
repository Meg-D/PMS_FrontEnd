{"ast":null,"code":"var _jsxFileName = \"/home/megd/Documents/sem3/sdp/PMS_FrontEnd/src/components/Medicine/AllMedicines.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Form, FormGroup, Label, Input, Button, ModalHeader, ModalBody, ModalFooter, Modal, Row } from 'reactstrap';\nimport axios from \"axios\";\nimport base_url from '../../api/bootapi';\nimport { Col, Container } from 'reactstrap';\nimport Medicine from './Medicine';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Showmedicine = props => {\n  _s();\n\n  const [medicines, setmedicines] = useState([]);\n  const [medicine, setmedicine] = useState([]);\n\n  const getAllmedicine = () => {\n    axios.get(`${base_url}/medicine/getAll`).then(response => {\n      console.log(response.data);\n      setmedicines(response.data);\n      console.log(medicines);\n    }, error => {\n      console.log(error);\n    });\n  };\n\n  useEffect(() => {\n    getAllmedicine();\n  }, []);\n  const {\n    className\n  } = props;\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: medicines.length > 0 ? medicines.map(item => /*#__PURE__*/_jsxDEV(Col, {\n          sm: \"10\",\n          children: [/*#__PURE__*/_jsxDEV(Medicine, {\n            medicine: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 29\n        }, this)) : \"No transactions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Showmedicine, \"cbtBuvxsBM5T6pjXVx972ychExQ=\");\n\n_c = Showmedicine;\nexport default Showmedicine;\n\nvar _c;\n\n$RefreshReg$(_c, \"Showmedicine\");","map":{"version":3,"sources":["/home/megd/Documents/sem3/sdp/PMS_FrontEnd/src/components/Medicine/AllMedicines.js"],"names":["React","useEffect","useState","Form","FormGroup","Label","Input","Button","ModalHeader","ModalBody","ModalFooter","Modal","Row","axios","base_url","Col","Container","Medicine","Showmedicine","props","medicines","setmedicines","medicine","setmedicine","getAllmedicine","get","then","response","console","log","data","error","className","modal","setModal","toggle","length","map","item"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SACIC,IADJ,EAEIC,SAFJ,EAGIC,KAHJ,EAIIC,KAJJ,EAKIC,MALJ,EAKYC,WALZ,EAKyBC,SALzB,EAKoCC,WALpC,EAKiDC,KALjD,EAKwDC,GALxD,QAMO,YANP;AAOA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,GAAT,EAAaC,SAAb,QAA8B,YAA9B;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAE5B,QAAM,CAACC,SAAD,EAAWC,YAAX,IAAyBnB,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM,CAACoB,QAAD,EAAUC,WAAV,IAAuBrB,QAAQ,CAAC,EAAD,CAArC;;AAEA,QAAMsB,cAAc,GAAC,MAAI;AACrBX,IAAAA,KAAK,CAACY,GAAN,CAAW,GAAEX,QAAS,kBAAtB,EAAyCY,IAAzC,CACKC,QAAD,IAAY;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACAT,MAAAA,YAAY,CAACM,QAAQ,CAACG,IAAV,CAAZ;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYT,SAAZ;AACH,KALL,EAMKW,KAAD,IAAS;AACLH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACH,KARL;AAUH,GAXD;;AAcA9B,EAAAA,SAAS,CAAC,MAAI;AACVuB,IAAAA,cAAc;AACjB,GAFQ,EAEP,EAFO,CAAT;AAMA,QAAM;AACFQ,IAAAA;AADE,MAEFb,KAFJ;AAIA,QAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBhC,QAAQ,CAAC,KAAD,CAAlC;;AAEA,QAAMiC,MAAM,GAAG,MAAMD,QAAQ,CAAC,CAACD,KAAF,CAA7B;;AAEA,sBACI,QAAC,IAAD;AAAA,4BAgCI,QAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAA,6BACK,QAAC,GAAD;AAAA,kBAEOb,SAAS,CAACgB,MAAV,GAAmB,CAAnB,GACMhB,SAAS,CAACiB,GAAV,CAAeC,IAAD,iBAChB,QAAC,GAAD;AAAK,UAAA,EAAE,EAAC,IAAR;AAAA,kCACI,QAAC,QAAD;AAAU,YAAA,QAAQ,EAAEA;AAApB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADE,CADN,GAOM;AATb;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,YAhCJ,eA8CI;AAAA;AAAA;AAAA;AAAA,YA9CJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmDH,CApFD;;GAAMpB,Y;;KAAAA,Y;AAsFN,eAAeA,YAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    Button, ModalHeader, ModalBody, ModalFooter, Modal, Row\r\n} from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport base_url from '../../api/bootapi';\r\nimport { Col,Container } from 'reactstrap';\r\nimport Medicine from './Medicine';\r\n\r\nconst Showmedicine = (props) => {\r\n\r\n    const [medicines,setmedicines]=useState([]);\r\n    const [medicine,setmedicine]=useState([]);\r\n\r\n    const getAllmedicine=()=>{\r\n        axios.get(`${base_url}/medicine/getAll`).then(\r\n            (response)=>{\r\n                console.log(response.data);\r\n                setmedicines(response.data);\r\n                console.log(medicines)\r\n            },\r\n            (error)=>{\r\n                console.log(error);\r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        getAllmedicine();\r\n    },[]);\r\n\r\n\r\n\r\n    const {\r\n        className\r\n    } = props;\r\n\r\n    const [modal, setModal] = useState(false);\r\n\r\n    const toggle = () => setModal(!modal);\r\n\r\n    return (\r\n        <Form>\r\n            {/* <FormGroup>\r\n                <Label for=\"examplemedicine\">Select medicine</Label>\r\n                <Input type=\"select\" name=\"select\" id=\"medicineSelect\" onChange={(e) => {\r\n                    const medicineName = e.target.value;\r\n                    for(var i=0;i<medicines.length;i++){\r\n                        var obj = medicines[i];\r\n                        if(obj.name == medicineName){\r\n                            setmedicine(obj)\r\n                        }\r\n                    }\r\n\r\n\r\n                }}>\r\n                    <option>[Select one]</option>\r\n                    {\r\n                        medicines.length > 0 ? medicines.map((item) => <option>{item.name}</option>) : \"No medicine\"\r\n                    }\r\n                </Input>\r\n            </FormGroup>\r\n            <Button color=\"primary\" onClick={toggle}>Show Details</Button> */}\r\n            {/* <Modal isOpen={modal} toggle={toggle} className={className}>\r\n                <ModalHeader toggle={toggle}>medicine Details :</ModalHeader>\r\n                <ModalBody>\r\n                    Medicine Name : {medicine.name}<br/>\r\n                    Quantity Left : {medicine.quantity_left}<br/>\r\n                    Cost : {medicine.cost}<br/>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"primary\" onClick={toggle}>Go Back</Button>{' '}\r\n                </ModalFooter>\r\n            </Modal> */}\r\n            <Container fluid>\r\n                 <Row>\r\n                    {\r\n                        medicines.length > 0\r\n                            ? medicines.map((item) => \r\n                            <Col sm=\"10\">\r\n                                <Medicine medicine={item}/>\r\n                                <br/>\r\n                            </Col>\r\n                            )\r\n                            : \"No transactions\"\r\n                    }\r\n                  </Row> \r\n            </Container>  \r\n            <hr/>\r\n        </Form>\r\n\r\n    );\r\n}\r\n\r\nexport default Showmedicine;"]},"metadata":{},"sourceType":"module"}