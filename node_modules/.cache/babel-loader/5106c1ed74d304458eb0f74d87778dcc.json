{"ast":null,"code":"var _jsxFileName = \"/home/megd/Documents/sem3/sdp/PMS_FrontEnd/src/components/Sale/AddSale.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Form, FormGroup, Label, Input, Button, ModalHeader, ModalBody, ModalFooter, Modal, List } from 'reactstrap';\nimport { ToastContainer, toast } from \"react-toastify\";\nimport axios from \"axios\";\nimport { ListGroup, ListGroupItem } from 'reactstrap';\nimport base_url from '../../api/bootapi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddSale = props => {\n  _s();\n\n  const [medicines, setmedicines] = useState([]);\n  const [medicine, setmedicine] = useState({});\n  const [selectedList, setList] = useState([]);\n  const [newobj, setnewobj] = useState([]);\n  const [phoneNumber, setphone] = useState('');\n  const [sale, setsale] = useState({});\n  const [saleId, setsaleid] = useState('');\n  const [item, setitem] = useState({});\n  const user = localStorage.getItem('userid');\n  const saleid = localStorage.getItem('saleid');\n\n  const saveBill = () => {\n    axios.put(`${base_url}/sale/update/${saleid}`).then(response => {\n      console.log(response.data);\n      toast(\"Data Saved Successfully !!\");\n      console.log(response.data.amount);\n      alert(\"Total Amount : \" + response.data.amount);\n    }, error => {\n      toast(\"Data can't be saved !!\");\n      console.log(error);\n    });\n  };\n\n  const saveItem = () => {\n    axios.post(`${base_url}/item/add`, item).then(response => {\n      console.log(response.data);\n      toast(\"Data Saved Successfully !!\");\n    }, error => {\n      toast(\"Data can't be saved !!\");\n      console.log(error);\n    });\n  };\n\n  const getAllmedicine = () => {\n    axios.get(`${base_url}/medicine/getAll`).then(response => {\n      console.log(response.data);\n      setmedicines(response.data);\n      console.log(medicines);\n      setsale({ ...sale,\n        user_id: user\n      });\n    }, error => {\n      console.log(error);\n    });\n  };\n\n  const createSale = () => {\n    axios.post(`${base_url}/sale/add`, sale).then(response => {\n      console.log(response.data);\n      toast(\"Data Saved Successfully !!\");\n      localStorage.setItem(\"saleid\", response.data.sale_id);\n      setitem({ ...item,\n        sale_id: localStorage.getItem('saleid')\n      });\n    }, error => {\n      toast(\"Data can't be saved !!\");\n      console.log(error);\n    });\n  };\n\n  const getCustomerByPhone = () => {\n    axios.get(`${base_url}/customer/getCustomer/${phoneNumber}`).then(response => {\n      console.log(response.data);\n      setsale({ ...sale,\n        cust_id: response.data.customer_id\n      });\n      console.log(sale);\n    }, error => {\n      console.log(error);\n    });\n    /*            axios.post(`http://localhost:8888/sale/add`,sale).then(\r\n                            (response)=>{\r\n                                console.log(response.data);\r\n                                toast(\"Data Saved Successfully !!\");\r\n                                setsaleid(response.data.sale_id);\r\n                                setitem({...item,sale_id:saleId})\r\n                            },\r\n                            (error)=>{\r\n                                toast(\"Data can't be saved !!\");\r\n                                console.log(error);\r\n                            }\r\n                        );*/\n  };\n\n  useEffect(() => {\n    getAllmedicine();\n  }, []);\n  const {\n    className\n  } = props;\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        for: \"examplequant\",\n        children: \"Enter Customer Phone Number :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"double\",\n        name: \"quantity\",\n        id: \"exampleQuant\",\n        onChange: e => {\n          setphone(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"reset\",\n      onClick: () => {\n        console.log(medicine);\n        getCustomerByPhone();\n      },\n      children: \"Get Customer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"reset\",\n      onClick: () => {\n        console.log(medicine);\n        createSale();\n      },\n      children: \"Create Sale\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        for: \"exampleResource\",\n        children: \"Select Medicine\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"select\",\n        name: \"select\",\n        id: \"equipmentResource\",\n        onChange: e => {\n          const medicineName = e.target.value;\n          const id = medicineName.split(\" \")[0];\n\n          for (var i = 0; i < medicines.length; i++) {\n            var obj = medicines[i];\n\n            if (obj.medicine_id == id) {\n              setmedicine(obj);\n              newobj.push(obj);\n              setList({ ...selectedList,\n                newobj\n              });\n              setitem({ ...item,\n                med_id: id\n              });\n            }\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"[Select one]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this), medicines.length > 0 ? medicines.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n          children: item.medicine_id + \" - Medicine name - \" + item.name + \", Price - \" + item.cost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 72\n        }, this)) : \"No Luxury resources\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        for: \"examplequant\",\n        children: \"Quantity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"number\",\n        name: \"quantity\",\n        id: \"exampleQuant\",\n        onChange: e => {\n          setitem({ ...item,\n            quantity: e.target.value\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        for: \"examplequant\",\n        children: \"Discount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"double\",\n        name: \"quantity\",\n        id: \"exampleQuant\",\n        onChange: e => {\n          setitem({ ...item,\n            discount: e.target.value\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"reset\",\n      onClick: () => {\n        console.log(medicine);\n        saveItem();\n      },\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Label, {\n      for: \"exampleEquipment\",\n      children: \"Selected Medicines\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        class: \"list-group\",\n        children: newobj.length > 0 ? newobj.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          class: \"list-group-item li\",\n          children: [\"Medicine Name - \" + item.name + \", Cost - \" + item.cost, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 62\n        }, this)) : \"No Medicines\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"reset\",\n      onClick: () => {\n        console.log(medicine);\n        saveBill();\n      },\n      children: \"Generate Bill\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddSale, \"Nzv2Pjr1lyuddUSONTwTfYbwf9o=\");\n\n_c = AddSale;\nexport default AddSale;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddSale\");","map":{"version":3,"sources":["/home/megd/Documents/sem3/sdp/PMS_FrontEnd/src/components/Sale/AddSale.js"],"names":["React","useEffect","useState","Form","FormGroup","Label","Input","Button","ModalHeader","ModalBody","ModalFooter","Modal","List","ToastContainer","toast","axios","ListGroup","ListGroupItem","base_url","AddSale","props","medicines","setmedicines","medicine","setmedicine","selectedList","setList","newobj","setnewobj","phoneNumber","setphone","sale","setsale","saleId","setsaleid","item","setitem","user","localStorage","getItem","saleid","saveBill","put","then","response","console","log","data","amount","alert","error","saveItem","post","getAllmedicine","get","user_id","createSale","setItem","sale_id","getCustomerByPhone","cust_id","customer_id","className","modal","setModal","toggle","e","target","value","medicineName","id","split","i","length","obj","medicine_id","push","med_id","map","name","cost","quantity","discount"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    Button, ModalHeader, ModalBody, ModalFooter, Modal,List\r\n} from 'reactstrap';\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport axios from \"axios\";\r\nimport { ListGroup, ListGroupItem } from 'reactstrap';\r\nimport base_url from '../../api/bootapi';\r\n\r\nconst AddSale = (props) => {\r\n\r\n    const [medicines,setmedicines]=useState([]);\r\n    const [medicine,setmedicine]=useState({});\r\n    const [selectedList,setList]=useState([]);\r\n    const [newobj,setnewobj] = useState([]);\r\n    const [phoneNumber,setphone] = useState('');\r\n    const [sale,setsale] = useState({});\r\n    const [saleId,setsaleid] = useState('');\r\n    const [item,setitem] = useState({});\r\n    const user = localStorage.getItem('userid');\r\n    const saleid = localStorage.getItem('saleid');\r\n        const saveBill = () =>{\r\n                    axios.put(`${base_url}/sale/update/${saleid}`).then(\r\n                                                    (response)=>{\r\n                                                        console.log(response.data);\r\n                                                        toast(\"Data Saved Successfully !!\");\r\n                                                        console.log(response.data.amount);\r\n                                                        alert(\"Total Amount : \"+ response.data.amount);\r\n                                                    },\r\n                                                    (error)=>{\r\n                                                        toast(\"Data can't be saved !!\");\r\n                                                        console.log(error);\r\n                                                    }\r\n                                                );\r\n                            }\r\n\r\n        const saveItem = () =>{\r\n            axios.post(`${base_url}/item/add`,item).then(\r\n                                            (response)=>{\r\n                                                console.log(response.data);\r\n                                                toast(\"Data Saved Successfully !!\");\r\n                                                \r\n                                            },\r\n                                            (error)=>{\r\n                                                toast(\"Data can't be saved !!\");\r\n                                                console.log(error);\r\n                                            }\r\n                                        );\r\n                    }\r\n\r\n        const getAllmedicine=()=>{\r\n            axios.get(`${base_url}/medicine/getAll`).then(\r\n                (response)=>{\r\n                    console.log(response.data);\r\n                    setmedicines(response.data);\r\n                    console.log(medicines)\r\n                    setsale({...sale,user_id:user})\r\n                },\r\n                (error)=>{\r\n                    console.log(error);\r\n                }\r\n            );\r\n        }\r\n\r\n        const createSale=()=>{\r\n                    axios.post(`${base_url}/sale/add`,sale).then(\r\n                                                    (response)=>{\r\n                                                        console.log(response.data);\r\n                                                        toast(\"Data Saved Successfully !!\");\r\n                                                        localStorage.setItem(\"saleid\",response.data.sale_id)\r\n                                                        setitem({...item,sale_id:localStorage.getItem('saleid')})\r\n                                                    },\r\n                                                    (error)=>{\r\n                                                        toast(\"Data can't be saved !!\");\r\n                                                        console.log(error);\r\n                                                    }\r\n                                                );\r\n                }\r\n\r\n        const getCustomerByPhone=()=>{\r\n                    axios.get(`${base_url}/customer/getCustomer/${phoneNumber}`).then(\r\n                        (response)=>{\r\n                            console.log(response.data);\r\n                            setsale({...sale,cust_id:response.data.customer_id})\r\n                            console.log(sale);\r\n                        },\r\n                        (error)=>{\r\n                            console.log(error);\r\n                        }\r\n                    );\r\n\r\n        /*            axios.post(`http://localhost:8888/sale/add`,sale).then(\r\n                                (response)=>{\r\n                                    console.log(response.data);\r\n                                    toast(\"Data Saved Successfully !!\");\r\n                                    setsaleid(response.data.sale_id);\r\n                                    setitem({...item,sale_id:saleId})\r\n                                },\r\n                                (error)=>{\r\n                                    toast(\"Data can't be saved !!\");\r\n                                    console.log(error);\r\n                                }\r\n                            );*/\r\n\r\n                }\r\n\r\n\r\n        useEffect(()=>{\r\n            getAllmedicine();\r\n\r\n        },[]);\r\n\r\n\r\n\r\n\r\n\r\n        const {\r\n            className\r\n        } = props;\r\n\r\n        const [modal, setModal] = useState(false);\r\n\r\n        const toggle = () => setModal(!modal);\r\n\r\n    return (\r\n        <Form>\r\n        <FormGroup>\r\n                                    <Label for=\"examplequant\">Enter Customer Phone Number :</Label>\r\n                                    <Input type=\"double\" name=\"quantity\" id=\"exampleQuant\" onChange={(e) => {\r\n                                        setphone(e.target.value)\r\n                                    }}/>\r\n                                </FormGroup>\r\n        <Button type=\"reset\" onClick={()=>{\r\n                                            console.log(medicine);\r\n                                            getCustomerByPhone();\r\n                                        }}>Get Customer</Button>\r\n        <Button type=\"reset\" onClick={()=>{\r\n                                    console.log(medicine);\r\n                                    createSale();\r\n                                }}>Create Sale</Button>\r\n\r\n            <hr/>\r\n            <FormGroup>\r\n                <Label for=\"exampleResource\">Select Medicine</Label>\r\n                <Input type=\"select\" name=\"select\" id=\"equipmentResource\" onChange={(e) => {\r\n                    const medicineName = e.target.value;\r\n                    const id = medicineName.split(\" \")[0];\r\n                    for(var i=0;i<medicines.length;i++){\r\n                        var obj = medicines[i];\r\n                        if(obj.medicine_id == id){\r\n                            setmedicine(obj)\r\n                            newobj.push(obj);\r\n                            setList({...selectedList,newobj});\r\n                            setitem({...item,med_id:id})\r\n\r\n                        }\r\n                    }\r\n\r\n\r\n                }}>\r\n                    <option>[Select one]</option>\r\n                    {\r\n                        medicines.length > 0 ? medicines.map((item) => <option>{item.medicine_id+\" - Medicine name - \"+item.name+\", Price - \"+item.cost}</option>) : \"No Luxury resources\"\r\n                    }\r\n                </Input>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                            <Label for=\"examplequant\">Quantity</Label>\r\n                            <Input type=\"number\" name=\"quantity\" id=\"exampleQuant\" onChange={(e) => {\r\n                                setitem({...item, quantity : e.target.value})\r\n                            }}/>\r\n                        </FormGroup>\r\n            <FormGroup>\r\n                            <Label for=\"examplequant\">Discount</Label>\r\n                            <Input type=\"double\" name=\"quantity\" id=\"exampleQuant\" onChange={(e) => {\r\n                                setitem({...item, discount : e.target.value})\r\n                            }}/>\r\n                        </FormGroup>\r\n            <Button type=\"reset\" onClick={()=>{\r\n                            console.log(medicine);\r\n                            saveItem();\r\n                        }}>Add</Button>\r\n            <hr/>\r\n            <Label for=\"exampleEquipment\">Selected Medicines</Label>\r\n            <div>\r\n            <ul class=\"list-group\">\r\n                {\r\n                    newobj.length > 0 ? newobj.map((item) => <li class=\"list-group-item li\">{\"Medicine Name - \"+item.name+\", Cost - \"+item.cost} </li>) : \"No Medicines\"\r\n                }\r\n            </ul>\r\n            </div>\r\n            <Button type=\"reset\" onClick={()=>{\r\n                                        console.log(medicine);\r\n                                        saveBill();\r\n                                    }}>Generate Bill</Button>\r\n        </Form>\r\n\r\n    );\r\n}\r\n\r\nexport default AddSale;"]},"metadata":{},"sourceType":"module"}