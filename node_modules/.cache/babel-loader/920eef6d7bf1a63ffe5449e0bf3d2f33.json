{"ast":null,"code":"var _jsxFileName = \"/home/megd/Documents/sem3/sdp/PMS_FrontEnd/src/components/Transaction/ViewTransaction.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Form, FormGroup, Label, Input, Button, ModalHeader, ModalBody, ModalFooter, Modal } from 'reactstrap';\nimport { Row, Col, Container } from 'reactstrap';\nimport axios from \"axios\";\nimport base_url from '../../api/bootapi';\nimport Transaction from './Transaction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Showtransaction = props => {\n  _s();\n\n  const [transactions, setTransactions] = useState({});\n  const [transaction, setTransaction] = useState([]);\n  const [user, setUser] = useState([]);\n  const [vendor, setVendor] = useState([]);\n  const [medicine, setMedicine] = useState([]);\n\n  const getAllTransaction = () => {\n    axios.get(`${base_url}/transaction/getall`).then(response => {\n      console.log(response.data);\n      setTransactions(response.data);\n      console.log(transactions);\n    }, error => {\n      console.log(error);\n    });\n  };\n\n  useEffect(() => {\n    getAllTransaction();\n  }, []);\n  const {\n    className\n  } = props;\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: transactions.length > 0 ? transactions.map(item => /*#__PURE__*/_jsxDEV(Col, {\n          sm: \"10\",\n          children: [/*#__PURE__*/_jsxDEV(Transaction, {\n            user: item.user_id,\n            transaction: item,\n            medicine: item.med_id,\n            vendor: item.ven_id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 29\n        }, this)) : \"No transactions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 14\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Showtransaction, \"OjXFOwUA/yFvgpXTxIYhGh6254U=\");\n\n_c = Showtransaction;\nexport default Showtransaction;\n\nvar _c;\n\n$RefreshReg$(_c, \"Showtransaction\");","map":{"version":3,"sources":["/home/megd/Documents/sem3/sdp/PMS_FrontEnd/src/components/Transaction/ViewTransaction.js"],"names":["React","useEffect","useState","Form","FormGroup","Label","Input","Button","ModalHeader","ModalBody","ModalFooter","Modal","Row","Col","Container","axios","base_url","Transaction","Showtransaction","props","transactions","setTransactions","transaction","setTransaction","user","setUser","vendor","setVendor","medicine","setMedicine","getAllTransaction","get","then","response","console","log","data","error","className","modal","setModal","toggle","length","map","item","user_id","med_id","ven_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SACIC,IADJ,EAEIC,SAFJ,EAGIC,KAHJ,EAIIC,KAJJ,EAKIC,MALJ,EAKYC,WALZ,EAKyBC,SALzB,EAKoCC,WALpC,EAKiDC,KALjD,QAMO,YANP;AAOA,SAASC,GAAT,EAAaC,GAAb,EAAiBC,SAAjB,QAAkC,YAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAAA;;AAE/B,QAAM,CAACC,YAAD,EAAcC,eAAd,IAA+BnB,QAAQ,CAAC,EAAD,CAA7C;AACA,QAAM,CAACoB,WAAD,EAAaC,cAAb,IAA6BrB,QAAQ,CAAC,EAAD,CAA3C;AACA,QAAM,CAACsB,IAAD,EAAMC,OAAN,IAAevB,QAAQ,CAAC,EAAD,CAA7B;AACA,QAAM,CAACwB,MAAD,EAAQC,SAAR,IAAqBzB,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAM,CAAC0B,QAAD,EAAUC,WAAV,IAAyB3B,QAAQ,CAAC,EAAD,CAAvC;;AAGA,QAAM4B,iBAAiB,GAAC,MAAI;AACxBf,IAAAA,KAAK,CAACgB,GAAN,CAAW,GAAEf,QAAS,qBAAtB,EAA4CgB,IAA5C,CACKC,QAAD,IAAY;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACAf,MAAAA,eAAe,CAACY,QAAQ,CAACG,IAAV,CAAf;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYf,YAAZ;AACH,KALL,EAMKiB,KAAD,IAAS;AACLH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACH,KARL;AAUH,GAXD;;AAcApC,EAAAA,SAAS,CAAC,MAAI;AACV6B,IAAAA,iBAAiB;AACpB,GAFQ,EAEP,EAFO,CAAT;AAMA,QAAM;AACFQ,IAAAA;AADE,MAEFnB,KAFJ;AAIA,QAAM,CAACoB,KAAD,EAAQC,QAAR,IAAoBtC,QAAQ,CAAC,KAAD,CAAlC;;AAEA,QAAMuC,MAAM,GAAG,MAAMD,QAAQ,CAAC,CAACD,KAAF,CAA7B;;AAEA,sBACI;AAAA,2BACK,QAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAA,6BACI,QAAC,GAAD;AAAA,kBAEOnB,YAAY,CAACsB,MAAb,GAAsB,CAAtB,GACMtB,YAAY,CAACuB,GAAb,CAAkBC,IAAD,iBACnB,QAAC,GAAD;AAAK,UAAA,EAAE,EAAC,IAAR;AAAA,kCACI,QAAC,WAAD;AAAa,YAAA,IAAI,EAAEA,IAAI,CAACC,OAAxB;AAAiC,YAAA,WAAW,EAAED,IAA9C;AAAoD,YAAA,QAAQ,EAAEA,IAAI,CAACE,MAAnE;AAA2E,YAAA,MAAM,EAAEF,IAAI,CAACG;AAAxF;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADE,CADN,GAOM;AATb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CAxDD;;GAAM7B,e;;KAAAA,e;AA0DN,eAAeA,eAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    Button, ModalHeader, ModalBody, ModalFooter, Modal\r\n} from 'reactstrap';\r\nimport { Row,Col,Container } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport base_url from '../../api/bootapi';\r\nimport Transaction from './Transaction';\r\n\r\nconst Showtransaction = (props) => {\r\n\r\n    const [transactions,setTransactions]=useState({});\r\n    const [transaction,setTransaction]=useState([]);\r\n    const [user,setUser]=useState([]);\r\n    const [vendor,setVendor] = useState([]);\r\n    const [medicine,setMedicine] = useState([]);\r\n\r\n\r\n    const getAllTransaction=()=>{\r\n        axios.get(`${base_url}/transaction/getall`).then(\r\n            (response)=>{\r\n                console.log(response.data);\r\n                setTransactions(response.data);\r\n                console.log(transactions);\r\n            },\r\n            (error)=>{\r\n                console.log(error);\r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        getAllTransaction();\r\n    },[]);\r\n\r\n\r\n\r\n    const {\r\n        className\r\n    } = props;\r\n\r\n    const [modal, setModal] = useState(false);\r\n\r\n    const toggle = () => setModal(!modal);\r\n\r\n    return (\r\n        <div>\r\n             <Container fluid>\r\n                 <Row>\r\n                    {\r\n                        transactions.length > 0\r\n                            ? transactions.map((item) => \r\n                            <Col sm=\"10\">\r\n                                <Transaction user={item.user_id} transaction={item} medicine={item.med_id} vendor={item.ven_id}/>\r\n                                <br/>\r\n                            </Col>\r\n                            )\r\n                            : \"No transactions\"\r\n                    }\r\n                  </Row> \r\n            </Container>  \r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Showtransaction;"]},"metadata":{},"sourceType":"module"}