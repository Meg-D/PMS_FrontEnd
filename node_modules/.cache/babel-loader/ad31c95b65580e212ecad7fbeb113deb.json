{"ast":null,"code":"var _jsxFileName = \"/home/megd/Documents/sem3/sdp/PMS_FrontEnd/src/components/Request/ShowRequest.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Form, FormGroup, Label, Input, Button, ModalHeader, ModalBody, ModalFooter, Modal } from 'reactstrap';\nimport axios from \"axios\";\nimport base_url from '../../api/bootapi';\nimport vendormenu from '../Vendor/VendorMenu';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ShowRequest = props => {\n  _s();\n\n  const [requests, setrequests] = useState([]);\n  const [request, setrequest] = useState({});\n  const [user, setUser] = useState([]);\n  const [vendor, setVendor] = useState([]);\n  const [user2, setUser2] = useState([]);\n\n  const getAllrequests = () => {\n    axios.get(`${base_url}/request/getall`).then(response => {\n      console.log(response.data);\n      setrequests(response.data);\n      console.log(requests);\n    }, error => {\n      console.log(error);\n    });\n  };\n\n  useEffect(() => {\n    getAllrequests();\n  }, []);\n  const {\n    className\n  } = props;\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        for: \"examplerequest\",\n        children: \"Select Request\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"select\",\n        name: \"select\",\n        id: \"requestSelect\",\n        onChange: e => {\n          const requestName = e.target.value;\n\n          for (var i = 0; i < requests.length; i++) {\n            var obj = requests[i];\n\n            if (obj.medicine_name == requestName) {\n              setrequest(obj);\n              console.log(request);\n              setUser(obj.placed_by);\n              setUser2(obj.accepted_by);\n              setVendor(obj.vendor_id);\n            }\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"[Select one]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), requests.length > 0 ? requests.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n          children: item.medicine_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 70\n        }, this)) : \"No request\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      color: \"primary\",\n      onClick: toggle,\n      children: \"Show Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modal,\n      toggle: toggle,\n      className: className,\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        toggle: toggle,\n        children: \"Request Details :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: [\"Medicine Name : \", request.medicine_name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 60\n        }, this), \"Quantity : \", request.quantity, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 50\n        }, this), \"Status : \", request.status, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 46\n        }, this), \"Order Date : \", request.order_date, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 54\n        }, this), \"Placed by : \", user.username, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 48\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          onClick: toggle,\n          children: \"Go Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), ' ']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ShowRequest, \"NqQFjVkJ5N1m4IerOCFPkxQPGnE=\");\n\n_c = ShowRequest;\nexport default ShowRequest;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowRequest\");","map":{"version":3,"sources":["/home/megd/Documents/sem3/sdp/PMS_FrontEnd/src/components/Request/ShowRequest.js"],"names":["React","useEffect","useState","Form","FormGroup","Label","Input","Button","ModalHeader","ModalBody","ModalFooter","Modal","axios","base_url","vendormenu","ShowRequest","props","requests","setrequests","request","setrequest","user","setUser","vendor","setVendor","user2","setUser2","getAllrequests","get","then","response","console","log","data","error","className","modal","setModal","toggle","e","requestName","target","value","i","length","obj","medicine_name","placed_by","accepted_by","vendor_id","map","item","quantity","status","order_date","username"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    Button, ModalHeader, ModalBody, ModalFooter, Modal\r\n} from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport base_url from '../../api/bootapi';\r\nimport vendormenu from '../Vendor/VendorMenu';\r\n\r\nconst ShowRequest = (props) => {\r\n\r\n    const [requests,setrequests]=useState([]);\r\n    const [request,setrequest]=useState({});\r\n    const [user,setUser]=useState([]);\r\n    const [vendor,setVendor]=useState([]);\r\n    const [user2,setUser2] = useState([]);\r\n\r\n    const getAllrequests=()=>{\r\n        axios.get(`${base_url}/request/getall`).then(\r\n            (response)=>{\r\n                console.log(response.data);\r\n                setrequests(response.data);\r\n                console.log(requests);\r\n            },\r\n            (error)=>{\r\n                console.log(error);\r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        getAllrequests();\r\n    },[]);\r\n\r\n    const {\r\n        className\r\n    } = props;\r\n\r\n    const [modal, setModal] = useState(false);\r\n\r\n    const toggle = () => setModal(!modal);\r\n\r\n    return (\r\n        <Form>\r\n            <FormGroup>\r\n                <Label for=\"examplerequest\">Select Request</Label>\r\n                <Input type=\"select\" name=\"select\" id=\"requestSelect\" onChange={(e) => {\r\n                    const requestName = e.target.value;\r\n                    for(var i=0;i<requests.length;i++){\r\n                        var obj = requests[i];\r\n                        if(obj.medicine_name == requestName){\r\n                            setrequest(obj)\r\n                            console.log(request);\r\n                            setUser(obj.placed_by);\r\n                            setUser2(obj.accepted_by);\r\n                            setVendor(obj.vendor_id);\r\n                        }\r\n                    }\r\n\r\n\r\n                }}>\r\n                    <option>[Select one]</option>\r\n                    {\r\n                        requests.length > 0 ? requests.map((item) => <option>{item.medicine_name}</option>) : \"No request\"\r\n                    }\r\n                </Input>\r\n            </FormGroup>\r\n            <Button color=\"primary\" onClick={toggle}>Show Details</Button>\r\n            <Modal isOpen={modal} toggle={toggle} className={className}>\r\n                <ModalHeader toggle={toggle}>Request Details :</ModalHeader>\r\n                <ModalBody>\r\n                    Medicine Name : {request.medicine_name}<br/>\r\n                    Quantity : {request.quantity}<br/>\r\n                    Status : {request.status}<br/>\r\n                    Order Date : {request.order_date}<br/>\r\n                    Placed by : {user.username}<br/>\r\n                    {/* Delivery Date : {request.delivery_date}<br/>\r\n                    Accepted by : {user2.username}<br/>\r\n                    Vendor : {vendor.name}<br/> */}\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"primary\" onClick={toggle}>Go Back</Button>{' '}\r\n                </ModalFooter>\r\n            </Modal>\r\n            <hr/>\r\n        </Form>\r\n\r\n    );\r\n}\r\n\r\nexport default ShowRequest;"]},"metadata":{},"sourceType":"module"}