{"ast":null,"code":"var _jsxFileName = \"/home/megd/Documents/sem3/sdp/PMS_FrontEnd/src/components/Sale/AddSale.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Form, FormGroup, Label, Input, Button, List } from 'reactstrap';\nimport { Modal, ModalBody, ModalFooter } from 'react-bootstrap';\nimport { ToastContainer, toast } from \"react-toastify\";\nimport axios from \"axios\";\nimport { ListGroup, ListGroupItem } from 'reactstrap';\nimport base_url from '../../api/bootapi';\nimport { Row, Col } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddSale = props => {\n  _s();\n\n  const [medicines, setmedicines] = useState([]);\n  const [medicine, setmedicine] = useState({});\n  const [selectedList, setList] = useState([]);\n  const [newobj, setnewobj] = useState([]);\n  const [phoneNumber, setphone] = useState('');\n  const [sale, setsale] = useState({});\n  const [saleId, setsaleid] = useState('');\n  const [item, setitem] = useState({});\n  const user = localStorage.getItem('userid');\n  const saleid = localStorage.getItem('saleid');\n  const [bill, setBill] = useState();\n\n  const saveBill = () => {\n    axios.put(`${base_url}/sale/update/${saleid}`).then(response => {\n      console.log(response.data); // toast.success(\"Sale Made !!\",{\n      //     position: \"bottom-center\",\n      // });\n\n      console.log(response.data.amount); //alert(\"Total Amount : \"+ response.data.amount);\n\n      setBill(response.data.amount);\n      console.log(bill);\n      setnewobj([]);\n    }, error => {\n      toast(\"Sale could not be made, Try Again !!\");\n      console.log(error);\n    });\n  };\n\n  const saveItem = () => {\n    axios.post(`${base_url}/item/add`, item).then(response => {\n      console.log(response.data);\n      toast.success(\"Item Added !!\", {\n        position: \"bottom-center\"\n      });\n    }, error => {\n      toast.error(\"Item could not be added, Try Again !!\");\n      console.log(error);\n    });\n  };\n\n  const getAllmedicine = () => {\n    axios.get(`${base_url}/medicine/getAll`).then(response => {\n      console.log(response.data);\n      setmedicines(response.data);\n      console.log(medicines);\n      setsale({ ...sale,\n        user_id: user\n      });\n    }, error => {\n      console.log(error);\n    });\n  };\n\n  const createSale = () => {\n    axios.post(`${base_url}/sale/add`, sale).then(response => {\n      console.log(response.data);\n      toast.success(\"Sale created !!\", {\n        position: \"bottom-center\"\n      });\n      localStorage.setItem(\"saleid\", response.data.sale_id);\n      setitem({ ...item,\n        sale_id: localStorage.getItem('saleid')\n      });\n    }, error => {\n      toast.error(\"Sale could not be created, check Customer details and then Try Again !!\");\n      console.log(error);\n    });\n  };\n\n  const getCustomerByPhone = () => {\n    axios.get(`${base_url}/customer/getCustomer/${phoneNumber}`).then(response => {\n      console.log(response.data);\n      toast.success(\"Customer Fetched!!\", {\n        position: \"bottom-center\"\n      });\n      setsale({ ...sale,\n        cust_id: response.data.customer_id\n      });\n      console.log(sale);\n    }, error => {\n      console.log(error);\n      toast.error(\"Customer could not be fetched, make sure that Customer already Exists and then Try Again!!\");\n    });\n    /*            axios.post(`http://localhost:8888/sale/add`,sale).then(\r\n                            (response)=>{\r\n                                console.log(response.data);\r\n                                toast(\"Data Saved Successfully !!\");\r\n                                setsaleid(response.data.sale_id);\r\n                                setitem({...item,sale_id:saleId})\r\n                            },\r\n                            (error)=>{\r\n                                toast(\"Data can't be saved !!\");\r\n                                console.log(error);\r\n                            }\r\n                        );*/\n  };\n\n  useEffect(() => {\n    getAllmedicine();\n  }, []);\n  const {\n    className\n  } = props;\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => setModal(!modal); // const {\n  //     className\n  // } = props;\n  // const [modal, setModal] = useState(false);\n  // const toggle = () => setModal(!modal);\n\n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        for: \"examplequant\",\n        style: {\n          align: 'left'\n        },\n        children: \"Enter Customer Phone Number :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: \"9\",\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            name: \"quantity\",\n            id: \"exampleQuant\",\n            onChange: e => {\n              setphone(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: \"3\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            onClick: () => {\n              console.log(medicine);\n              getCustomerByPhone();\n            },\n            children: \"Get Customer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        width: '50%'\n      },\n      color: \"warning\",\n      onClick: () => {\n        console.log(medicine);\n        createSale();\n      },\n      children: \"Create Sale\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      style: {\n        marginTop: '4%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        for: \"exampleResource\",\n        children: \"Select Medicine\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"select\",\n        name: \"select\",\n        id: \"equipmentResource\",\n        onChange: e => {\n          const medicineName = e.target.value;\n          const id = medicineName.split(\" \")[0];\n\n          for (var i = 0; i < medicines.length; i++) {\n            var obj = medicines[i];\n\n            if (obj.medicine_id == id) {\n              setmedicine(obj);\n              newobj.push(obj);\n              setList({ ...selectedList,\n                newobj\n              });\n              setitem({ ...item,\n                med_id: id\n              });\n            }\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"[Select one]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 21\n        }, this), medicines.length > 0 ? medicines.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n          children: item.medicine_id + \" \" + item.name + \", Price - \" + item.cost + \", Quantity - \" + item.quantity_left\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 72\n        }, this)) : \"No Medicines\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        for: \"examplequant\",\n        children: \"Quantity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"number\",\n        name: \"quantity\",\n        id: \"exampleQuant\",\n        onChange: e => {\n          setitem({ ...item,\n            quantity: e.target.value\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        for: \"examplequant\",\n        children: \"Discount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"double\",\n        name: \"quantity\",\n        id: \"exampleQuant\",\n        onChange: e => {\n          setitem({ ...item,\n            discount: e.target.value\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        width: '20%'\n      },\n      type: \"reset\",\n      onClick: () => {\n        console.log(medicine);\n        saveItem();\n      },\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Label, {\n      for: \"exampleEquipment\",\n      children: \"Selected Medicines\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        class: \"list-group\",\n        children: newobj.length > 0 ? newobj.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          class: \"list-group-item li\",\n          children: [\"Medicine Name - \" + item.name + \", Cost - \" + item.cost, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 62\n        }, this)) : \"No Medicines\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        marginTop: '4%',\n        width: '30%'\n      },\n      color: \"success\",\n      onClick: (() => {\n        console.log(medicine);\n        saveBill();\n      }, handleShow),\n      children: \"Generate Bill\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [\"Total Amount : \", bill]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 37\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddSale, \"6Q6vW2lUm5H7jsv0OUfKmwr8tjQ=\");\n\n_c = AddSale;\nexport default AddSale;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddSale\");","map":{"version":3,"sources":["/home/megd/Documents/sem3/sdp/PMS_FrontEnd/src/components/Sale/AddSale.js"],"names":["React","useEffect","useState","Form","FormGroup","Label","Input","Button","List","Modal","ModalBody","ModalFooter","ToastContainer","toast","axios","ListGroup","ListGroupItem","base_url","Row","Col","AddSale","props","medicines","setmedicines","medicine","setmedicine","selectedList","setList","newobj","setnewobj","phoneNumber","setphone","sale","setsale","saleId","setsaleid","item","setitem","user","localStorage","getItem","saleid","bill","setBill","saveBill","put","then","response","console","log","data","amount","error","saveItem","post","success","position","getAllmedicine","get","user_id","createSale","setItem","sale_id","getCustomerByPhone","cust_id","customer_id","className","modal","setModal","toggle","show","setShow","handleClose","handleShow","align","e","target","value","width","marginTop","medicineName","id","split","i","length","obj","medicine_id","push","med_id","map","name","cost","quantity_left","quantity","discount"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    Button, List\r\n} from 'reactstrap';\r\nimport { Modal, ModalBody, ModalFooter } from 'react-bootstrap';\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport axios from \"axios\";\r\nimport { ListGroup, ListGroupItem } from 'reactstrap';\r\nimport base_url from '../../api/bootapi';\r\nimport {Row,Col} from 'reactstrap';\r\n\r\nconst AddSale = (props) => {\r\n\r\n    const [medicines,setmedicines]=useState([]);\r\n    const [medicine,setmedicine]=useState({});\r\n    const [selectedList,setList]=useState([]);\r\n    const [newobj,setnewobj] = useState([]);\r\n    const [phoneNumber,setphone] = useState('');\r\n    const [sale,setsale] = useState({});\r\n    const [saleId,setsaleid] = useState('');\r\n    const [item,setitem] = useState({});\r\n    const user = localStorage.getItem('userid');\r\n    const saleid = localStorage.getItem('saleid');\r\n    const [bill,setBill]=useState();\r\n        const saveBill = () =>{\r\n                    axios.put(`${base_url}/sale/update/${saleid}`).then(\r\n                                                    (response)=>{\r\n                                                        console.log(response.data);\r\n                                                        // toast.success(\"Sale Made !!\",{\r\n                                                        //     position: \"bottom-center\",\r\n                                                        // });\r\n                                                        console.log(response.data.amount);\r\n                                                        \r\n                                                        //alert(\"Total Amount : \"+ response.data.amount);\r\n                                                        setBill(response.data.amount);\r\n                                                        console.log(bill);\r\n                                                        setnewobj([]);\r\n                                                    },\r\n                                                    (error)=>{\r\n                                                        toast(\"Sale could not be made, Try Again !!\");\r\n                                                        console.log(error);\r\n                                                    }\r\n                                                );\r\n                            }\r\n\r\n        const saveItem = () =>{\r\n            axios.post(`${base_url}/item/add`,item).then(\r\n                                            (response)=>{\r\n                                                console.log(response.data);\r\n                                                toast.success(\"Item Added !!\",{\r\n                                                    position: \"bottom-center\",\r\n                                                });\r\n                                                \r\n                                            },\r\n                                            (error)=>{\r\n                                                toast.error(\"Item could not be added, Try Again !!\");\r\n                                                console.log(error);\r\n                                            }\r\n                                        );\r\n                    }\r\n\r\n        const getAllmedicine=()=>{\r\n            axios.get(`${base_url}/medicine/getAll`).then(\r\n                (response)=>{\r\n                    console.log(response.data);\r\n                    setmedicines(response.data);\r\n                    console.log(medicines)\r\n                    setsale({...sale,user_id:user})\r\n                },\r\n                (error)=>{\r\n                    console.log(error);\r\n                }\r\n            );\r\n        }\r\n\r\n        const createSale=()=>{\r\n                    axios.post(`${base_url}/sale/add`,sale).then(\r\n                                                    (response)=>{\r\n                                                        console.log(response.data);\r\n                                                        toast.success(\"Sale created !!\",{\r\n                                                            position: \"bottom-center\",\r\n                                                        });\r\n                                                        localStorage.setItem(\"saleid\",response.data.sale_id)\r\n                                                        setitem({...item,sale_id:localStorage.getItem('saleid')})\r\n                                                    },\r\n                                                    (error)=>{\r\n                                                        toast.error(\"Sale could not be created, check Customer details and then Try Again !!\");\r\n                                                        console.log(error);\r\n                                                    }\r\n                                                );\r\n                }\r\n\r\n        const getCustomerByPhone=()=>{\r\n                    axios.get(`${base_url}/customer/getCustomer/${phoneNumber}`).then(\r\n                        (response)=>{\r\n                            console.log(response.data);\r\n                            toast.success(\"Customer Fetched!!\",{\r\n                                position: \"bottom-center\",\r\n                            })\r\n                            setsale({...sale,cust_id:response.data.customer_id})\r\n                            console.log(sale);\r\n                        },\r\n                        (error)=>{\r\n                            console.log(error);\r\n                            toast.error(\"Customer could not be fetched, make sure that Customer already Exists and then Try Again!!\")\r\n                        }\r\n                    );\r\n\r\n        /*            axios.post(`http://localhost:8888/sale/add`,sale).then(\r\n                                (response)=>{\r\n                                    console.log(response.data);\r\n                                    toast(\"Data Saved Successfully !!\");\r\n                                    setsaleid(response.data.sale_id);\r\n                                    setitem({...item,sale_id:saleId})\r\n                                },\r\n                                (error)=>{\r\n                                    toast(\"Data can't be saved !!\");\r\n                                    console.log(error);\r\n                                }\r\n                            );*/\r\n\r\n                }\r\n\r\n\r\n        useEffect(()=>{\r\n            getAllmedicine();\r\n\r\n        },[]);\r\n\r\n\r\n\r\n\r\n        const {\r\n            className\r\n        } = props;\r\n    \r\n        const [modal, setModal] = useState(false);\r\n    \r\n        const toggle = () => setModal(!modal);\r\n        // const {\r\n        //     className\r\n        // } = props;\r\n\r\n        // const [modal, setModal] = useState(false);\r\n\r\n        // const toggle = () => setModal(!modal);\r\n        const [show, setShow] = useState(false);\r\n\r\n        const handleClose = () => setShow(false);\r\n        const handleShow = () => setShow(true);\r\n      \r\n\r\n    return (\r\n        <Form>\r\n        <FormGroup>\r\n            <Label for=\"examplequant\" style={{align:'left'}}>Enter Customer Phone Number :</Label>\r\n            <Row>\r\n                <Col md='9'>\r\n                    <Input type=\"number\" name=\"quantity\" id=\"exampleQuant\" onChange={(e) => {\r\n                                        setphone(e.target.value)\r\n                                    }}/>\r\n                </Col>\r\n                <Col md='3'>\r\n                    <Button color=\"primary\" onClick={()=>{\r\n                                            console.log(medicine);\r\n                                            getCustomerByPhone();\r\n                                        }}>Get Customer</Button>\r\n                </Col>\r\n            </Row>\r\n        </FormGroup>\r\n        <hr/>\r\n            \r\n        <Button style={{width:'50%'}} color='warning' onClick={()=>{\r\n                                    console.log(medicine);\r\n                                    createSale();\r\n                                }}>Create Sale</Button>\r\n\r\n            \r\n        <FormGroup style={{marginTop:'4%'}}>\r\n            <Label for=\"exampleResource\">Select Medicine</Label>\r\n            <Input type=\"select\" name=\"select\" id=\"equipmentResource\" onChange={(e) => {\r\n                    const medicineName = e.target.value;\r\n                    const id = medicineName.split(\" \")[0];\r\n                    for(var i=0;i<medicines.length;i++){\r\n                        var obj = medicines[i];\r\n                        if(obj.medicine_id == id){\r\n                            setmedicine(obj)\r\n                            newobj.push(obj);\r\n                            setList({...selectedList,newobj});\r\n                            setitem({...item,med_id:id})\r\n                            \r\n                        }\r\n                    }\r\n\r\n\r\n                }}>\r\n                    <option>[Select one]</option>\r\n                    {\r\n                        medicines.length > 0 ? medicines.map((item) => <option>{item.medicine_id +\" \"+ item.name+\", Price - \"+item.cost+\", Quantity - \"+item.quantity_left}</option>) : \"No Medicines\"\r\n                    }\r\n                </Input>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                            <Label for=\"examplequant\">Quantity</Label>\r\n                            <Input type=\"number\" name=\"quantity\" id=\"exampleQuant\" onChange={(e) => {\r\n                                setitem({...item, quantity : e.target.value})\r\n                            }}/>\r\n                        </FormGroup>\r\n            <FormGroup>\r\n                            <Label for=\"examplequant\">Discount</Label>\r\n                            <Input type=\"double\" name=\"quantity\" id=\"exampleQuant\" onChange={(e) => {\r\n                                setitem({...item, discount : e.target.value})\r\n                            }}/>\r\n                        </FormGroup>\r\n            <Button style={{width:'20%'}} type=\"reset\" onClick={()=>{\r\n                            console.log(medicine);\r\n                            saveItem();\r\n                        }}>Add</Button>\r\n            <hr/>\r\n            <Label for=\"exampleEquipment\">Selected Medicines</Label>\r\n            <div>\r\n            <ul class=\"list-group\">\r\n                {\r\n                    newobj.length > 0 ? newobj.map((item) => <li class=\"list-group-item li\">{\"Medicine Name - \"+item.name+\", Cost - \"+item.cost} </li>) : \"No Medicines\"\r\n                }\r\n            </ul>\r\n            </div>\r\n            <Button style={{marginTop:'4%', width:'30%'}} color=\"success\" onClick={()=>{\r\n                                        console.log(medicine);\r\n                                        saveBill();\r\n                                    }, handleShow}>Generate Bill</Button>\r\n                                    {/* <Modal isOpen={modal} toggle={toggle} className={className}>\r\n                                                        <ModalHeader toggle={toggle}> Bill </ModalHeader>\r\n                                                        <ModalBody> Total Amount : {bill} </ModalBody> \r\n                                                        <ModalFooter>\r\n                                                            <Button color='danger' onClick={function noRefCheck(){}}> Close </Button>\r\n                                                        </ModalFooter>\r\n                                                    </Modal> */}\r\n\r\n<Modal show={show} onHide={handleClose}>\r\n        {/* <Modal.Header closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header> */}\r\n        <Modal.Body>Total Amount : {bill}</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          {/* <Button variant=\"primary\" onClick={handleClose}>\r\n            Save Changes\r\n          </Button> */}\r\n        </Modal.Footer>\r\n      </Modal>\r\n                                    <hr/>\r\n\r\n\r\n\r\n\r\n\r\n{/* \r\n      <Button variant=\"primary\" onClick={handleShow}>\r\n        Launch demo modal\r\n      </Button> */}\r\n\r\n      {/* <Modal show={show} onHide={handleClose}>\r\n        {/* <Modal.Header closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header> \r\n        <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleClose}>\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal> */}\r\n\r\n\r\n        </Form>\r\n\r\n    );\r\n}\r\n\r\nexport default AddSale;"]},"metadata":{},"sourceType":"module"}