{"ast":null,"code":"var _jsxFileName = \"/home/megd/Documents/sem3/sdp/PMS_FrontEnd/src/components/Request/UpdateRequest.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Form, FormGroup, Label, Input, Button, ModalHeader, ModalBody, ModalFooter, Modal } from 'reactstrap';\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport base_url from '../../api/bootapi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpdateRequest = props => {\n  _s();\n\n  const [requests, setrequests] = useState([]);\n  const user = localStorage.getItem('userid');\n  const [request, setrequest] = useState({\n    accepted_by: user\n  });\n  const [vendors, setVendors] = useState([]);\n\n  const getAllVendor = () => {\n    axios.get(`${base_url}/vendor/getall`).then(response => {\n      console.log(response.data);\n      setVendors(response.data);\n      console.log(vendors);\n    }, error => {\n      console.log(error);\n    });\n  };\n\n  const getAllrequest = () => {\n    axios.get(`${base_url}/request/getall`).then(response => {\n      console.log(response.data);\n      setrequests(response.data);\n      console.log(requests);\n    }, error => {\n      console.log(error);\n    });\n  };\n\n  const updaterequest = () => {\n    axios.put(`${base_url}/request/update`, request).then(response => {\n      console.log(response.data);\n      toast.success(\"Request Updated!!\", {\n        position: \"bottom-center\"\n      });\n    }, error => {\n      toast(\"Request could not be Updated, Try Again !!\");\n      console.log(error);\n    });\n  };\n\n  useEffect(() => {\n    getAllrequest();\n    getAllVendor();\n  }, []);\n  const {\n    className\n  } = props;\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        for: \"examplerequest\",\n        children: \"Select request\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"select\",\n        name: \"select\",\n        id: \"requestSelect\",\n        onChange: e => {\n          const requestName = e.target.value;\n\n          for (var i = 0; i < requests.length; i++) {\n            var obj = requests[i];\n\n            if (obj.medicine_name == requestName) {\n              setrequest({ ...request,\n                request_id: obj.request_id\n              });\n            }\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"[Select one]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), requests.length > 0 ? requests.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n          children: item.medicine_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 70\n        }, this)) : \"No request\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        for: \"exampleprice\",\n        children: \"price\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"double\",\n        name: \"cost\",\n        id: \"exampleCost\",\n        onChange: e => {\n          setrequest({ ...request,\n            price: e.target.value\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        for: \"examplerequest\",\n        children: \"Select Vendor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"select\",\n        name: \"select\",\n        id: \"vendorSelect\",\n        onChange: e => {\n          const vendorName = e.target.value;\n\n          for (var i = 0; i < vendors.length; i++) {\n            var obj = vendors[i];\n\n            if (obj.name == vendorName) {\n              setrequest({ ...request,\n                vendor_id: obj.vendor_id\n              });\n            }\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"[Select one]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), vendors.length > 0 ? vendors.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 68\n        }, this)) : \"No vendor\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      color: \"success\",\n      onClick: () => {\n        console.log(request);\n        updaterequest();\n        getAllrequest();\n      },\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UpdateRequest, \"O5vto4Ud/G06A+a4uWDslS5vFSw=\");\n\n_c = UpdateRequest;\nexport default UpdateRequest;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateRequest\");","map":{"version":3,"sources":["/home/megd/Documents/sem3/sdp/PMS_FrontEnd/src/components/Request/UpdateRequest.js"],"names":["React","useEffect","useState","Form","FormGroup","Label","Input","Button","ModalHeader","ModalBody","ModalFooter","Modal","axios","toast","base_url","UpdateRequest","props","requests","setrequests","user","localStorage","getItem","request","setrequest","accepted_by","vendors","setVendors","getAllVendor","get","then","response","console","log","data","error","getAllrequest","updaterequest","put","success","position","className","modal","setModal","toggle","e","requestName","target","value","i","length","obj","medicine_name","request_id","map","item","price","vendorName","name","vendor_id"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    Button, ModalHeader, ModalBody, ModalFooter, Modal\r\n} from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport {toast} from \"react-toastify\";\r\nimport base_url from '../../api/bootapi';\r\n\r\nconst UpdateRequest = (props) => {\r\n\r\n    const [requests,setrequests]=useState([]);\r\n    const user = localStorage.getItem('userid');\r\n    const[request,setrequest] = useState({accepted_by : user});\r\n    const [vendors,setVendors]=useState([]);\r\n\r\n    const getAllVendor=()=>{\r\n        axios.get(`${base_url}/vendor/getall`).then(\r\n            (response)=>{\r\n                console.log(response.data);\r\n                setVendors(response.data);\r\n                console.log(vendors)\r\n            },\r\n            (error)=>{\r\n                console.log(error);\r\n            }\r\n        );\r\n    }\r\n\r\n    const getAllrequest=()=>{\r\n        axios.get(`${base_url}/request/getall`).then(\r\n            (response)=>{\r\n                console.log(response.data);\r\n                setrequests(response.data);\r\n                console.log(requests)\r\n            },\r\n            (error)=>{\r\n                console.log(error);\r\n            }\r\n        );\r\n    }\r\n\r\n    const updaterequest = () =>{\r\n            axios.put(`${base_url}/request/update`,request).then(\r\n                (response)=>{\r\n                    console.log(response.data);\r\n                    toast.success(\"Request Updated!!\",{\r\n                        position: \"bottom-center\",\r\n                    });\r\n                },\r\n                (error)=>{\r\n                    toast(\"Request could not be Updated, Try Again !!\");\r\n                    console.log(error);\r\n                }\r\n            );\r\n        }\r\n\r\n\r\n    useEffect(()=>{\r\n        getAllrequest();\r\n        getAllVendor();\r\n    },[]);\r\n\r\n\r\n\r\n    const {\r\n        className\r\n    } = props;\r\n\r\n    const [modal, setModal] = useState(false);\r\n\r\n    const toggle = () => setModal(!modal);\r\n\r\n    return (\r\n        <Form>\r\n            <FormGroup>\r\n                <Label for=\"examplerequest\">Select request</Label>\r\n                <Input type=\"select\" name=\"select\" id=\"requestSelect\" onChange={(e) => {\r\n                    const requestName = e.target.value;\r\n                    for(var i=0;i<requests.length;i++){\r\n                        var obj = requests[i];\r\n                        if(obj.medicine_name == requestName){\r\n                            setrequest({...request, request_id : obj.request_id});\r\n                        }\r\n                    }\r\n                }}>\r\n                    <option>[Select one]</option>\r\n                    {\r\n                        requests.length > 0 ? requests.map((item) => <option>{item.medicine_name}</option>) : \"No request\"\r\n                    }\r\n                </Input>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                 <Label for=\"exampleprice\">price</Label>\r\n                 <Input type=\"double\" name=\"cost\" id=\"exampleCost\" onChange={(e) => {\r\n                    setrequest({...request, price : e.target.value})\r\n                          }}/>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <Label for=\"examplerequest\">Select Vendor</Label>\r\n                <Input type=\"select\" name=\"select\" id=\"vendorSelect\" onChange={(e) => {\r\n                    const vendorName = e.target.value;\r\n                    for(var i=0;i<vendors.length;i++){\r\n                        var obj = vendors[i];\r\n                        if(obj.name == vendorName){\r\n                            setrequest({...request, vendor_id : obj.vendor_id});\r\n                        }\r\n                    }\r\n                }}>\r\n                    <option>[Select one]</option>\r\n                    {\r\n                        vendors.length > 0 ? vendors.map((item) => <option>{item.name}</option>) : \"No vendor\"\r\n                    }\r\n                </Input>\r\n            </FormGroup>\r\n                        <Button color='success' onClick={()=>{\r\n                            console.log(request);\r\n                            updaterequest();\r\n                            getAllrequest();\r\n                        }}>Submit</Button>\r\n            <hr/>\r\n        </Form>\r\n\r\n    );\r\n}\r\n\r\nexport default UpdateRequest;"]},"metadata":{},"sourceType":"module"}