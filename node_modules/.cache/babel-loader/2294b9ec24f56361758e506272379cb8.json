{"ast":null,"code":"var _jsxFileName = \"/home/megd/Documents/sem3/sdp/PMS_FrontEnd/src/components/Transaction/AddTransaction.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport base_url from \"../../api/bootapi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Addtransaction = props => {\n  _s();\n\n  const user = localStorage.getItem('userid');\n  const [transaction, settransaction] = useState({\n    user_id: user\n  });\n  const [vendors, setvendors] = useState([]);\n  const [vendor, setvendor] = useState([]);\n\n  const savetransaction = () => {\n    axios.post(`${base_url}/transaction/add`, transaction).then(response => {\n      console.log(response.data);\n      toast(\"Data Saved Successfully !!\");\n    }, error => {\n      toast(\"Data can't be saved !!\");\n      console.log(error);\n    });\n  };\n\n  const getAllvendor = () => {\n    axios.get(`${base_url}/vendor/getall`).then(response => {\n      console.log(response.data);\n      setvendors(response.data);\n      console.log(vendors);\n    }, error => {\n      console.log(error);\n    });\n  };\n\n  useEffect(() => {\n    getAllvendor();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        for: \"examplerequest\",\n        children: \"Medicine Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        name: \"medicine_name\",\n        id: \"exampleName\",\n        onChange: e => {\n          settransaction({ ...transaction,\n            medicine_name: e.target.value\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        for: \"examplequant\",\n        children: \"Quantity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"number\",\n        name: \"quantity\",\n        id: \"exampleQuant\",\n        onChange: e => {\n          settransaction({ ...transaction,\n            quantity: e.target.value\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        for: \"examplequant\",\n        children: \"Price\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"double\",\n        name: \"quantity\",\n        id: \"exampleQuant\",\n        onChange: e => {\n          settransaction({ ...transaction,\n            price: e.target.value\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        for: \"examplevendor\",\n        children: \"Select Vendor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 41\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"select\",\n        name: \"select\",\n        id: \"vendorSelect\",\n        onChange: e => {\n          const vendorName = e.target.value;\n\n          for (var i = 0; i < vendors.length; i++) {\n            var obj = vendors[i];\n\n            if (obj.name == vendorName) {\n              setvendor(obj);\n              settransaction({ ...transaction,\n                vendor_id: obj.vendor_id\n              });\n            }\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"[Select one]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 45\n        }, this), vendors.length > 0 ? vendors.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 92\n        }, this)) : \"No Vendors\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 41\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"reset\",\n      onClick: () => {\n        console.log(transaction);\n        savetransaction();\n      },\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Addtransaction, \"nFEG/pqgVNgTwTYVbFVHfAcPHuI=\");\n\n_c = Addtransaction;\nexport default Addtransaction;\n\nvar _c;\n\n$RefreshReg$(_c, \"Addtransaction\");","map":{"version":3,"sources":["/home/megd/Documents/sem3/sdp/PMS_FrontEnd/src/components/Transaction/AddTransaction.js"],"names":["React","Button","Form","FormGroup","Label","Input","useEffect","useState","axios","toast","base_url","Addtransaction","props","user","localStorage","getItem","transaction","settransaction","user_id","vendors","setvendors","vendor","setvendor","savetransaction","post","then","response","console","log","data","error","getAllvendor","get","e","medicine_name","target","value","quantity","price","vendorName","i","length","obj","name","vendor_id","map","item"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Button, Form, FormGroup, Label, Input} from 'reactstrap';\r\nimport {useEffect, useState} from 'react';\r\nimport axios from \"axios\";\r\nimport {toast} from \"react-toastify\";\r\nimport base_url from \"../../api/bootapi\";\r\n\r\nconst Addtransaction = (props) => {\r\n    const user = localStorage.getItem('userid');\r\n    const[transaction,settransaction] = useState({user_id:user});\r\n    const[vendors,setvendors] = useState([]);\r\n    const[vendor,setvendor] = useState([]);\r\n    \r\n\r\n\r\n    const savetransaction = () =>{\r\n        axios.post(`${base_url}/transaction/add`,transaction).then(\r\n            (response)=>{\r\n                console.log(response.data);\r\n                toast(\"Data Saved Successfully !!\");\r\n            },\r\n            (error)=>{\r\n                toast(\"Data can't be saved !!\");\r\n                console.log(error);\r\n            }\r\n        );\r\n    }\r\n\r\n    const getAllvendor=()=>{\r\n            axios.get(`${base_url}/vendor/getall`).then(\r\n                (response)=>{\r\n                    console.log(response.data);\r\n                    setvendors(response.data);\r\n                    console.log(vendors)\r\n                },\r\n                (error)=>{\r\n                    console.log(error);\r\n                }\r\n            );\r\n        }\r\n\r\n\r\n    useEffect(()=>{\r\n        getAllvendor();\r\n    },[]);\r\n\r\n    return (\r\n        <Form>\r\n            <FormGroup>\r\n                <Label for=\"examplerequest\">Medicine Name</Label>\r\n                <Input type=\"text\" name=\"medicine_name\"\r\n                id=\"exampleName\" onChange={(e) => {\r\n                    settransaction({...transaction, medicine_name : e.target.value})\r\n                }}/>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n                <Label for=\"examplequant\">Quantity</Label>\r\n                <Input type=\"number\" name=\"quantity\" id=\"exampleQuant\" onChange={(e) => {\r\n                    settransaction({...transaction, quantity : e.target.value})\r\n                }}/>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n                            <Label for=\"examplequant\">Price</Label>\r\n                            <Input type=\"double\" name=\"quantity\" id=\"exampleQuant\" onChange={(e) => {\r\n                                settransaction({...transaction, price : e.target.value})\r\n                            }}/>\r\n                        </FormGroup>\r\n\r\n            <FormGroup>\r\n                                        <Label for=\"examplevendor\">Select Vendor</Label>\r\n                                        <Input type=\"select\" name=\"select\" id=\"vendorSelect\" onChange={(e) => {\r\n                                            const vendorName = e.target.value;\r\n                                            for(var i=0;i<vendors.length;i++){\r\n                                                var obj = vendors[i];\r\n                                                if(obj.name == vendorName){\r\n                                                    setvendor(obj)\r\n                                                    settransaction({...transaction,vendor_id : obj.vendor_id})\r\n                                                   \r\n                                                }\r\n                                            }\r\n\r\n\r\n                                        }}>\r\n                                            <option>[Select one]</option>\r\n                                            {\r\n                                                vendors.length > 0 ? vendors.map((item) => <option>{item.name}</option>) : \"No Vendors\"\r\n                                            }\r\n                                        </Input>\r\n                                    </FormGroup>\r\n            <Button type=\"reset\" onClick={()=>{\r\n                console.log(transaction);\r\n                savetransaction();\r\n            }}>Submit</Button>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default Addtransaction;\r\n"]},"metadata":{},"sourceType":"module"}